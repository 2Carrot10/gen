#!/home/twocarrot10/Documents/programs/ollamaWrapper/.venv/bin/python
# change this to match your project dir
import requests
import json
import sys
import argparse
import time
import subprocess
import re

ai = "qwen2.5-coder:1.5b"

parser = argparse.ArgumentParser()
parser.add_argument("-a", "--append", action="store_true",
                    help="Weather or not it should append to the end.")
parser.add_argument("-m", "--model", nargs="?",
                    help="Choose qwen codellama, code, phi3")
parser.add_argument("-i", "--input", nargs="?",
                    help="Optionally use instead of inputing through STDIN")
parser.add_argument("-e", "--explain", nargs="?",
                    help="Give info in addition to inputing through STDIN")
parser.add_argument("-q", "--quote", action="store_true",
                    help="Put all text in a block quote")
args = parser.parse_args()


if args.model is not None:
    if args.model == "qwen":
        ai = "qwen2.5-coder:1.5b"
    if args.model == "codellama":
        ai = "codellama:7b"
    elif args.model == "code":
        ai = "codellama:7b-code"
    elif args.model == "phi3":
        ai = "phi3:mini"
    else:
        ai = args.model


def generate():
    input = ""
    inputAndExplination = ""
    if args.input is None:
        for line in sys.stdin:
            input = input + line
        if args.explain is not None:
            inputAndExplination = args.explain + "\n" + input
        else:
            inputAndExplination = input
    else:
        input = args.input
        inputAndExplination = input  # There is no extra explanation to give

    url = "http://localhost:11434/api/generate"

    data = dict(
        model=ai,
        prompt=inputAndExplination,
        stream=False
    )

    response = requests.post(url=url, json=data)

    output = ""
    text = json.loads(response.text).get("response")
    if args.quote:
        text = re.sub('\n', '\n\t', text)
        text = ">\t" + text
    if args.append:
        output = output + input + "\n"
    output = output + text
    return output


def tryGenerate():
    try:
        return generate()
    except Exception:
        print("\n")


try:
    requests.get(url="http://localhost:11434/")
    print(tryGenerate())
except Exception:
    subprocess._PopenSelector
    process = subprocess.Popen(['ollama', 'serve'],
                               stdout=subprocess.DEVNULL,
                               stderr=subprocess.DEVNULL)
    while True:
        try:
            requests.get(url="http://localhost:11434/")
            break
        except Exception:
            time.sleep(.01)
    print(tryGenerate())
    process.terminate()
    process.wait()

